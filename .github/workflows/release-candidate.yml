name: Release Candidate

on:
  workflow_dispatch:
    inputs:
      semver:
        type: choice
        required: true
        description: 'SemVer level for version bump'
        default: 'Select level'
        options:
          - 'Select level'
          - 'major'
          - 'minor'
          - 'patch'

env:
  HUSKY: '0'

jobs:
  release_candidate:
    name: 'Create release candidate'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Exit if not on master branch
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/master" ]]; then
            echo "This action can only run on the master branch. Exiting."
            exit 1
          fi

      - name: Check required semver input
        run: |
          if [[ "${{ github.event.inputs.semver }}" == "Select level" ]]; then
            echo "SemVer is required!"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Git config
        run: |
          git config user.email github-actions@github.com
          git config user.name github-actions

      - name: Apply version bump (major)
        if: github.event.inputs.semver == 'major'
        run: npm version major

      - name: Apply version bump (minor)
        if: github.event.inputs.semver == 'minor'
        run: npm version minor

      - name: Apply version bump (patch)
        if: github.event.inputs.semver == 'patch'
        run: npm version patch

      - name: Push version bump
        run: git push origin master --follow-tags --force

      - name: Output version
        id: version
        run: |
          version=$(node -p 'require("./package.json").version')
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "### Release: v$version" >> $GITHUB_STEP_SUMMARY




      - name: Checkout release branch
        run: git checkout -b releases/v${{ steps.version.outputs.version }}

      - name: Push release branch
        run: git push origin releases/v${{ steps.version.outputs.version }}
#
#      - uses: release-drafter/release-drafter@v5
#        with:
#          version: ${{ steps.version.outputs.version }}
#          publish: true
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}