name: Release Candidate

#on: workflow_dispatch
on:
  push:
    branches:
      - master

env:
  HUSKY: '0'

jobs:
  release_candidate:
    name: 'Create release candidate'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify Branch Name
        uses: ./.github/actions/verify-branch-name
        with:
          name: "master"

      - name: Git config
        run: |
          git config user.email github-actions@github.com
          git config user.name github-actions    

      - name: Get Release Options
        id: release
        uses: ./.github/actions/get-release-draft
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Apply version bump
        run: |
          VERSION=${{ steps.release.outputs.version }}
          TAG_NAME=${{ steps.release.outputs.tag_name }}
          echo "${VERSION} ${TAG_NAME}"
#          git tag -d v$VERSION || echo "Tag v${{VERSION}} not found locally, skipping deletion"
#          git push origin :refs/tags/v || echo "Tag v${{VERSION}} not found remotely, skipping deletion"
#          npm version $VERSION -m "Bump to version %s"
#          git push
#          git push origin v$VERSION --force
          
#      - name: Apply version bump (minor)
#        if: github.event.inputs.semver == 'minor'
#        run: npm version minor
#
#      - name: Apply version bump (patch)
#        if: github.event.inputs.semver == 'patch'
#        run: npm version patch
#
#      - name: Push version bump
#        run: git push origin master --follow-tags --force
#
#      - name: Output version
#        id: version
#        run: |
#          version=$(node -p 'require("./package.json").version')
#          echo "version=${version}" >> $GITHUB_OUTPUT
#          echo "### Release: v$version" >> $GITHUB_STEP_SUMMARY
#
#      - uses: release-drafter/release-drafter@v5
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          commitish: master
#          version: ${{ steps.version.outputs.version }}
#          publish: true
#          prerelease: true
#
#      - name: Checkout release branch
#        run: git checkout -b releases/v${{ steps.version.outputs.version }}
#
#      - name: Push release branch
#        run: git push origin releases/v${{ steps.version.outputs.version }}

#- name: Summary
#await core.summary.addRaw(`Release Version: ${version}`).write();